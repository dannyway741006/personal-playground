import{E as b,S as P,C as S,A as x,V as w,H as j,M as T,a as R,b as _,P as C,K as B,u as A}from"./apiStore-Con3--O7.js";import{d as y,o as z,aa as E,M as v,ag as U,A as N,l as I,_ as L}from"./index-OgRcA2Ha.js";import"./_commonjsHelpers-B5BZiXCZ.js";const O={jsDecoderModule:"/js/babylon.ktx2Decoder.js",jsMSCTranscoder:"/js/msc_basis_transcoder.js",wasmMSCTranscoder:"/js/msc_basis_transcoder.wasm",wasmUASTCToASTC:"/js/msc_basis_transcoder.wasm",wasmUASTCToBC7:"/js/msc_basis_transcoder.wasm",wasmUASTCToRGBA_UNORM:"/js/msc_basis_transcoder.wasm",wasmUASTCToRGBA_SRGB:"/js/msc_basis_transcoder.wasm",wasmUASTCToRGB_A_UNORM:"/js/msc_basis_transcoder.wasm"};B.URLConfig=O;const e={engine:null,scene:null,camera:null,canvas:null,model:null,createScene:async(p,M)=>{e.engine=new b(p,!0,{},!0),e.scene=new P(e.engine),e.scene.clearColor=new S(0,0,0,0),e.camera=new x("camera",Math.PI/2,Math.PI/2,4,new w(0,0,0),e.scene),e.camera.attachControl(p,!0),e.camera.setTarget(new w(0,0,0)),e.camera.minZ=.1,e.camera.lowerRadiusLimit=0,e.camera.upperRadiusLimit=10,e.camera.wheelDeltaPercentage=.1,e.camera.fov=.95,e.camera.wheelPrecision=100,new j("light",new w(0,1,0),e.scene);const o=10,a=1,c=[];for(let t=0;t<o;t++){c[t]=[];for(let s=0;s<o;s++){const i=T.CreatePlane(`cell_${t}_${s}`,{size:a},e.scene);i.rotation.x=Math.PI/2,i.position.x=(t-o/2)*a+a/2,i.position.z=(s-o/2)*a+a/2;const l=new R(`mat_${t}_${s}`,e.scene);l.diffuseColor=new _(.7,.7,.7),i.material=l,i.metadata={occupied:!1,defaultMaterial:l},c[t][s]=i}}console.log("grid::",c);const n=T.CreateBox("building",{width:1,height:1,depth:1},e.scene);n.position.y=1,n.metadata={width:1,depth:1},n.showBoundingBox=!0;let u=!1;function k(t,s){for(let r=0;r<o;r++)for(let d=0;d<o;d++){const m=c[r][d];m.metadata.occupied||(m.material.diffuseColor=new _(.7,.7,.7))}const i=n.metadata.width,l=n.metadata.depth,h=Math.floor((t+o/2*a)/a-i/2),f=Math.floor((s+o/2*a)/a-l/2);for(let r=0;r<i;r++)for(let d=0;d<l;d++){const m=h+r,g=f+d;c[m]&&c[m][g]&&!c[m][g].metadata.occupied&&(c[m][g].material.diffuseColor=new _(1,0,0))}}e.scene.onPointerObservable.add(t=>{switch(t.type){case C.POINTERDOWN:t.pickInfo?.hit&&t.pickInfo.pickedMesh===n&&(u=!0,e.camera?.detachControl());break;case C.POINTERMOVE:if(u){const s=e.scene?.pick(e.scene.pointerX,e.scene.pointerY);if(s?.pickedMesh&&(console.log("Picked Mesh:",s.pickedMesh.name),console.log("Picked Point:",s.pickedPoint),console.log("Picked Normal:",s.getNormal(!0))),s?.pickedMesh&&s.pickedMesh.metadata){const i=s.pickedMesh,l=n.metadata.width,h=n.metadata.depth,f=Math.floor((i.position.x+o/2*a)/a),r=Math.floor((i.position.z+o/2*a)/a);n.position.x=(f-o/2)*a+(l%2===0?0:a/2),n.position.z=(r-o/2)*a+(h%2===0?0:a/2),k(n.position.x,n.position.z)}}break;case C.POINTERUP:u&&(u=!1,e.camera?.attachControl(p,!0));break}}),p&&(p.addEventListener("wheel",t=>t.preventDefault()),e.engine.runRenderLoop(()=>{e.scene&&e.scene.render()}),window.addEventListener("resize",()=>{e.engine?.resize()}))},disposeModel:()=>{window.removeEventListener("resize",()=>e.engine?.resize()),e.model?.dispose(!0,!0),e.camera?.dispose(),e.scene?.dispose(),e.engine?.dispose(),e.model=null,e.camera=null,e.scene=null,e.engine=null,e.canvas=null}},D={class:"babylonWrapper"},G={name:"City"},V=y({...G,setup(p){const M=A(),o=async()=>{const a=document.getElementById("modelCanvas");await e.createScene(a,M)};return z(async()=>{E(()=>{let a=setTimeout(()=>{o(),clearTimeout(a)},10)})}),v(async()=>{e.disposeModel()}),(a,c)=>(N(),U("section",D,c[0]||(c[0]=[I("canvas",{id:"modelCanvas"},null,-1)])))}}),Z=L(V,[["__scopeId","data-v-d7827850"]]);export{Z as default};
